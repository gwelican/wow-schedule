type Query {
  availability: [UserData]
  myschedule: UserData
}

type UserData {
  userId: String!
  timezone: String
  availability: [Availability!]!
  username: String!
}

type Availability {
  day: String!
  intervals: [Interval!]!
}

type Interval {
  start: Int!
  end: Int!
  timezone: String!
  day: String!
}

type Mutation {
  addAvailabilityToUser(availability: IntervalInput ): UserData
  saveSchedule(schedule: [IntervalInput], timezone: String): UserData
}

type AddUserPayload {
  userId: String
}
input AddUserInput {
  userId: String
  timezone: String
  availability: [IntervalInput]
}

input IntervalInput {
  start: Int!
  end: Int!
  timezone: String!
  day: String!
}
